//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
// C_SceneLoad.cpp
// シーンロード
// Author : MasayaHayashi
//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

// ===== インクルード部 =====
#include "SceneLoad.h"
#include "C_SceneManager.h"

/*
#include "C_LoadUiIcon.h"
#include "main.h"
#include "debugproc.h"
#include "C_Camera.h"
#include "C_Light.h"
#include "C_TitleObj.h"
#include "C_FADE.h"
*/

// ===== グローバル変数宣言 =====
std::mutex *pMutex;
bool C_SCENE_LOAD::bFinishedLoad; // ロード終了判定

//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
// コンストラクタ
//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
C_SCENE_LOAD::C_SCENE_LOAD()
{
	pMutex = NEW std::mutex;

	bFinishedLoad = false;
}

//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
// デストラクタ
//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
C_SCENE_LOAD::~C_SCENE_LOAD()
{
	SAFE_DELETE(pMutex)
}

//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
// 別スレッド用ロード
//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
void InitNextResorce()
{
	pMutex->lock();

	C_SCENE_MANAGER *pSceneManager = GetSceneManager();

	C_SCENE_MANAGER::SCENE_STATE NextScene = pSceneManager->GetNextScene();
	pSceneManager->SetCurrentScene(NextScene);	// 現在のシーンを次のシーンに上書き
	pSceneManager->SetScene(NextScene);

	// 次のシーンの初期化
	pSceneManager->InitScene();


	pMutex->unlock();

	C_SCENE_LOAD::SetLoadFlg(true);

}

//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
// 初期化
//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
void C_SCENE_LOAD::InitScene()
{
	// ロードアイコン初期化
	pLoadIcon = NEW C_LOAD_UI_ICON;
	pLoadIcon->InitObject();

	// カメラ初期化
	pCamera = NEW C_CAMERA;
	pCamera->InitCamera();

	// ライト初期化
	pLight = NEW C_LIGHT;
	pLight->InitLight();

	
	pTitleObj = NEW C_TITLE_OBJ;
	pTitleObj->InitObject();
}

//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
// タイトル終了処理
//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
void C_SCENE_LOAD::UninitScene()
{
	// タイトルロゴ後処理
	pLoadIcon->UninitObject();
	SAFE_DELETE(pLoadIcon);

	pCamera->UninitCamera();
	SAFE_DELETE(pCamera);

	pLight->UninitLight();
	SAFE_DELETE(pLight);

	pTitleObj->UninitObject();
	SAFE_DELETE(pTitleObj);
}

//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
// 更新
//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
void C_SCENE_LOAD::UpdateLoad()
{
	// ロードオブジェクト更新
	pLoadIcon->UpdateObject();
}


//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
// ロード開始
//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
void C_SCENE_LOAD::EnableLoad()
{
	DWORD dwExecLastTime;
	DWORD dwFPSLastTime;
	DWORD dwCurrentTime;
	DWORD dwFrameCount;

	dwExecLastTime = dwFPSLastTime = timeGetTime();
	dwCurrentTime = dwFrameCount = 0;

#if 1

	// 新規スレッドを作成
	std::thread Thred(InitNextResorce);

	// ロード画面描画
	while (1)
	{
		dwCurrentTime = timeGetTime();

		if ((dwCurrentTime - dwExecLastTime) >= (1000 / 60))
		{
			dwExecLastTime = dwCurrentTime;

			UpdateLoad();
			DrawScene();

			// ロード完了
			if (bFinishedLoad)
				break;
		}
	}
	Thred.join();

	bFinishedLoad = false;
#endif
}

//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
// 描画
//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
void C_SCENE_LOAD::DrawScene()
{
	// オブジェクト取得
	LPDIRECT3DDEVICE9 pDevice = GetDevice();

	// バックバッファ＆Ｚバッファのクリア
	pDevice->Clear(0, NULL, (D3DCLEAR_TARGET | D3DCLEAR_ZBUFFER), D3DCOLOR_RGBA(0, 0, 0, 0), 1.0f, 0);

	// Direct3Dによる描画の開始
	if (SUCCEEDED(pDevice->BeginScene()))
	{
		pLoadIcon->DrawObject();	// ロード

		pCamera->SetCamera();		// カメラセット

		// Direct3Dによる描画の終了
		pDevice->EndScene();
	}
	// バックバッファとフロントバッファの入れ替え
	pDevice->Present(NULL, NULL, NULL, NULL);
}

//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
// ロードフラグセット
//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
void C_SCENE_LOAD::SetLoadFlg(bool bSet)
{
	bFinishedLoad = bSet;
}