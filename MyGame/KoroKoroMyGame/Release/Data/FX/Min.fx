//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
// Min.fx
// Author   : MasayaHayashi
// 更新履歴 : 
//			  2018/09/28 最低限のシェーダー作成
//＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝


///////////////////////////////////////////////////////////////////////////////////
//型定義
///////////////////////////////////////////////////////////////////////////////////
struct VS_OUT
{
	float4 f4Position : POSITION;
	float2 f2Texture : TEXCOORD0;
};
///////////////////////////////////////////////////////////////////////////////////
//グローバル
///////////////////////////////////////////////////////////////////////////////////

float4x4 mWVP; //ワールドから→ビュー→プロジェクションまでの座標変換行列　

texture texDecal; //メッシュのテクスチャ

sampler Sampler = sampler_state //サンプラー
{
	Texture = <texDecal>;
	MinFilter = LINEAR;
	MagFilter = LINEAR;
	MipFilter = NONE;
	AddressU = Clamp;
	AddressV = Clamp;
};

/////////////////////////////////////////////////////////////////////
//バーテックス・シェーダー
///////////////////////////////////////////////////////////////////////////////////
VS_OUT VS(float4 f4Position : POSITION, float2 f2Texture : TEXCOORD)
{
	VS_OUT Out;
	Out.f4Position = mul(f4Position, mWVP);
	Out.f2Texture = f2Texture;
	return Out;
}

///////////////////////////////////////////////////////////////////////////////////
//ピクセル・シェーダー
///////////////////////////////////////////////////////////////////////////////////
float4 PS(float2 f2Texture : TEXCOORD) : COLOR
{
	return tex2D(Sampler, f2Texture);
}

///////////////////////////////////////////////////////////////////////////////////
// テクニック
///////////////////////////////////////////////////////////////////////////////////
technique tecMinimum
{
	pass P0
	{
		VertexShader = compile vs_2_0 VS();
		PixelShader = compile ps_2_0 PS();
	}
}